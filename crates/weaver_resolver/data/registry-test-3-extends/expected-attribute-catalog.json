[
  {
    "name": "error.type",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "other",
          "value": {
            "type": "String",
            "value": "_OTHER"
          },
          "brief": "A fallback error value to be used when the instrumentation doesn't define a custom value.\n"
        }
      ]
    },
    "brief": "Describes a class of error the operation ended with.\n",
    "examples": {
      "type": "Strings",
      "values": [
        "timeout",
        "java.net.UnknownHostException",
        "server_certificate_invalid",
        "500"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "The `error.type` SHOULD be predictable and SHOULD have low cardinality.\nInstrumentations SHOULD document the list of errors they report.\n\nThe cardinality of `error.type` within one instrumentation library SHOULD be low.\nTelemetry consumers that aggregate data from multiple instrumentation libraries and applications\nshould be prepared for `error.type` to have high cardinality at query time when no\nadditional filters are applied.\n\nIf the operation has completed successfully, instrumentations SHOULD NOT set `error.type`.\n\nIf a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\nit's RECOMMENDED to:\n\n* Use a domain-specific attribute\n* Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.",
    "stability": "Stable"
  },
  {
    "name": "messaging.batch.message_count",
    "type": {
      "type": "Int"
    },
    "brief": "The number of messages sent, received, or processed in the scope of the batching operation.",
    "examples": {
      "type": "Ints",
      "values": [
        0,
        1,
        2
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "Instrumentations SHOULD NOT set `messaging.batch.message_count` on spans that operate with a single message. When a messaging client library supports both batch and single-message API for the same operation, instrumentations SHOULD use `messaging.batch.message_count` for batching APIs and SHOULD NOT use it for single-message APIs.\n"
  },
  {
    "name": "messaging.client_id",
    "type": {
      "type": "String"
    },
    "brief": "A unique identifier for the client that consumes or produces a message.\n",
    "examples": {
      "type": "Strings",
      "values": [
        "client-5",
        "myhost@8742@s8083jm"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.destination.name",
    "type": {
      "type": "String"
    },
    "brief": "The message destination name",
    "examples": {
      "type": "Strings",
      "values": [
        "MyQueue",
        "MyTopic"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "Destination name SHOULD uniquely identify a specific queue, topic or other entity within the broker. If\nthe broker doesn't have such notion, the destination name SHOULD uniquely identify the broker.\n"
  },
  {
    "name": "messaging.destination.template",
    "type": {
      "type": "String"
    },
    "brief": "Low cardinality representation of the messaging destination name",
    "examples": {
      "type": "Strings",
      "values": [
        "/customers/{customerId}"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "Destination names could be constructed from templates. An example would be a destination name involving a user name or product id. Although the destination name in this case is of high cardinality, the underlying template is of low cardinality and can be effectively used for grouping and aggregation.\n"
  },
  {
    "name": "messaging.destination.anonymous",
    "type": {
      "type": "Boolean"
    },
    "brief": "A boolean that is true if the message destination is anonymous (could be unnamed or have auto-generated name).",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.destination.temporary",
    "type": {
      "type": "Boolean"
    },
    "brief": "A boolean that is true if the message destination is temporary and might not exist anymore after messages are processed.",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.destination_publish.anonymous",
    "type": {
      "type": "Boolean"
    },
    "brief": "A boolean that is true if the publish message destination is anonymous (could be unnamed or have auto-generated name).",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.destination_publish.name",
    "type": {
      "type": "String"
    },
    "brief": "The name of the original destination the message was published to",
    "examples": {
      "type": "Strings",
      "values": [
        "MyQueue",
        "MyTopic"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "The name SHOULD uniquely identify a specific queue, topic, or other entity within the broker. If\nthe broker doesn't have such notion, the original destination name SHOULD uniquely identify the broker.\n"
  },
  {
    "name": "messaging.kafka.consumer.group",
    "type": {
      "type": "String"
    },
    "brief": "Name of the Kafka Consumer Group that is handling the message. Only applies to consumers, not producers.\n",
    "examples": {
      "type": "String",
      "value": "my-group"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.kafka.destination.partition",
    "type": {
      "type": "Int"
    },
    "brief": "Partition the message is sent to.\n",
    "examples": {
      "type": "Int",
      "value": 2
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.kafka.message.key",
    "type": {
      "type": "String"
    },
    "brief": "Message keys in Kafka are used for grouping alike messages to ensure they're processed on the same partition. They differ from `messaging.message.id` in that they're not unique. If the key is `null`, the attribute MUST NOT be set.\n",
    "examples": {
      "type": "String",
      "value": "myKey"
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "If the key type is not string, it's string representation has to be supplied for the attribute. If the key has no unambiguous, canonical string form, don't include its value.\n"
  },
  {
    "name": "messaging.kafka.message.offset",
    "type": {
      "type": "Int"
    },
    "brief": "The offset of a record in the corresponding Kafka partition.\n",
    "examples": {
      "type": "Int",
      "value": 42
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.kafka.message.tombstone",
    "type": {
      "type": "Boolean"
    },
    "brief": "A boolean that is true if the message is a tombstone.",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.message.conversation_id",
    "type": {
      "type": "String"
    },
    "brief": "The conversation ID identifying the conversation to which the message belongs, represented as a string. Sometimes called \"Correlation ID\".\n",
    "examples": {
      "type": "String",
      "value": "MyConversationId"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.message.envelope.size",
    "type": {
      "type": "Int"
    },
    "brief": "The size of the message body and metadata in bytes.\n",
    "examples": {
      "type": "Int",
      "value": 2738
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "This can refer to both the compressed or uncompressed size. If both sizes are known, the uncompressed\nsize should be used.\n"
  },
  {
    "name": "messaging.message.id",
    "type": {
      "type": "String"
    },
    "brief": "A value used by the messaging system as an identifier for the message, represented as a string.",
    "examples": {
      "type": "String",
      "value": "452a7c7c7c7048c2f887f61572b18fc2"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.message.body.size",
    "type": {
      "type": "Int"
    },
    "brief": "The size of the message body in bytes.\n",
    "examples": {
      "type": "Int",
      "value": 1439
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "This can refer to both the compressed or uncompressed body size. If both sizes are known, the uncompressed\nbody size should be used.\n"
  },
  {
    "name": "messaging.operation",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "publish",
          "value": {
            "type": "String",
            "value": "publish"
          },
          "brief": "One or more messages are provided for publishing to an intermediary. If a single message is published, the context of the \"Publish\" span can be used as the creation context and no \"Create\" span needs to be created.\n"
        },
        {
          "id": "create",
          "value": {
            "type": "String",
            "value": "create"
          },
          "brief": "A message is created. \"Create\" spans always refer to a single message and are used to provide a unique creation context for messages in batch publishing scenarios.\n"
        },
        {
          "id": "receive",
          "value": {
            "type": "String",
            "value": "receive"
          },
          "brief": "One or more messages are requested by a consumer. This operation refers to pull-based scenarios, where consumers explicitly call methods of messaging SDKs to receive messages.\n"
        },
        {
          "id": "deliver",
          "value": {
            "type": "String",
            "value": "deliver"
          },
          "brief": "One or more messages are passed to a consumer. This operation refers to push-based scenarios, where consumer register callbacks which get called by messaging SDKs.\n"
        }
      ]
    },
    "brief": "A string identifying the kind of messaging operation.\n",
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "If a custom value is used, it MUST be of low cardinality."
  },
  {
    "name": "messaging.rabbitmq.destination.routing_key",
    "type": {
      "type": "String"
    },
    "brief": "RabbitMQ message routing key.\n",
    "examples": {
      "type": "String",
      "value": "myKey"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.client_group",
    "type": {
      "type": "String"
    },
    "brief": "Name of the RocketMQ producer/consumer group that is handling the message. The client type is identified by the SpanKind.\n",
    "examples": {
      "type": "String",
      "value": "myConsumerGroup"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.consumption_model",
    "type": {
      "type": "Enum",
      "allow_custom_values": false,
      "members": [
        {
          "id": "clustering",
          "value": {
            "type": "String",
            "value": "clustering"
          },
          "brief": "Clustering consumption model"
        },
        {
          "id": "broadcasting",
          "value": {
            "type": "String",
            "value": "broadcasting"
          },
          "brief": "Broadcasting consumption model"
        }
      ]
    },
    "brief": "Model of message consumption. This only applies to consumer spans.\n",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.message.delay_time_level",
    "type": {
      "type": "Int"
    },
    "brief": "The delay time level for delay message, which determines the message delay time.\n",
    "examples": {
      "type": "Int",
      "value": 3
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.message.delivery_timestamp",
    "type": {
      "type": "Int"
    },
    "brief": "The timestamp in milliseconds that the delay message is expected to be delivered to consumer.\n",
    "examples": {
      "type": "Int",
      "value": 1665987217045
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.message.group",
    "type": {
      "type": "String"
    },
    "brief": "It is essential for FIFO message. Messages that belong to the same message group are always processed one by one within the same consumer group.\n",
    "examples": {
      "type": "String",
      "value": "myMessageGroup"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.message.keys",
    "type": {
      "type": "Strings"
    },
    "brief": "Key(s) of message, another way to mark message besides message id.\n",
    "examples": {
      "type": "Strings",
      "values": [
        "keyA",
        "keyB"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.message.tag",
    "type": {
      "type": "String"
    },
    "brief": "The secondary classifier of message besides topic.\n",
    "examples": {
      "type": "String",
      "value": "tagA"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.message.type",
    "type": {
      "type": "Enum",
      "allow_custom_values": false,
      "members": [
        {
          "id": "normal",
          "value": {
            "type": "String",
            "value": "normal"
          },
          "brief": "Normal message"
        },
        {
          "id": "fifo",
          "value": {
            "type": "String",
            "value": "fifo"
          },
          "brief": "FIFO message"
        },
        {
          "id": "delay",
          "value": {
            "type": "String",
            "value": "delay"
          },
          "brief": "Delay message"
        },
        {
          "id": "transaction",
          "value": {
            "type": "String",
            "value": "transaction"
          },
          "brief": "Transaction message"
        }
      ]
    },
    "brief": "Type of message.\n",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.rocketmq.namespace",
    "type": {
      "type": "String"
    },
    "brief": "Namespace of RocketMQ resources, resources in different namespaces are individual.\n",
    "examples": {
      "type": "String",
      "value": "myNamespace"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.gcp_pubsub.message.ordering_key",
    "type": {
      "type": "String"
    },
    "brief": "The ordering key for a given message. If the attribute is not present, the message does not have an ordering key.\n",
    "examples": {
      "type": "String",
      "value": "ordering_key"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "messaging.system",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "activemq",
          "value": {
            "type": "String",
            "value": "activemq"
          },
          "brief": "Apache ActiveMQ"
        },
        {
          "id": "aws_sqs",
          "value": {
            "type": "String",
            "value": "aws_sqs"
          },
          "brief": "Amazon Simple Queue Service (SQS)"
        },
        {
          "id": "azure_eventgrid",
          "value": {
            "type": "String",
            "value": "azure_eventgrid"
          },
          "brief": "Azure Event Grid"
        },
        {
          "id": "azure_eventhubs",
          "value": {
            "type": "String",
            "value": "azure_eventhubs"
          },
          "brief": "Azure Event Hubs"
        },
        {
          "id": "azure_servicebus",
          "value": {
            "type": "String",
            "value": "azure_servicebus"
          },
          "brief": "Azure Service Bus"
        },
        {
          "id": "gcp_pubsub",
          "value": {
            "type": "String",
            "value": "gcp_pubsub"
          },
          "brief": "Google Cloud Pub/Sub"
        },
        {
          "id": "jms",
          "value": {
            "type": "String",
            "value": "jms"
          },
          "brief": "Java Message Service"
        },
        {
          "id": "kafka",
          "value": {
            "type": "String",
            "value": "kafka"
          },
          "brief": "Apache Kafka"
        },
        {
          "id": "rabbitmq",
          "value": {
            "type": "String",
            "value": "rabbitmq"
          },
          "brief": "RabbitMQ"
        },
        {
          "id": "rocketmq",
          "value": {
            "type": "String",
            "value": "rocketmq"
          },
          "brief": "Apache RocketMQ"
        }
      ]
    },
    "brief": "An identifier for the messaging system being used. See below for a list of well-known identifiers.\n",
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.carrier.icc",
    "type": {
      "type": "String"
    },
    "brief": "The ISO 3166-1 alpha-2 2-character country code associated with the mobile carrier network.",
    "examples": {
      "type": "String",
      "value": "DE"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.carrier.mcc",
    "type": {
      "type": "String"
    },
    "brief": "The mobile carrier country code.",
    "examples": {
      "type": "String",
      "value": "310"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.carrier.mnc",
    "type": {
      "type": "String"
    },
    "brief": "The mobile carrier network code.",
    "examples": {
      "type": "String",
      "value": "001"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.carrier.name",
    "type": {
      "type": "String"
    },
    "brief": "The name of the mobile carrier.",
    "examples": {
      "type": "String",
      "value": "sprint"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.connection.subtype",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "gprs",
          "value": {
            "type": "String",
            "value": "gprs"
          },
          "brief": "GPRS"
        },
        {
          "id": "edge",
          "value": {
            "type": "String",
            "value": "edge"
          },
          "brief": "EDGE"
        },
        {
          "id": "umts",
          "value": {
            "type": "String",
            "value": "umts"
          },
          "brief": "UMTS"
        },
        {
          "id": "cdma",
          "value": {
            "type": "String",
            "value": "cdma"
          },
          "brief": "CDMA"
        },
        {
          "id": "evdo_0",
          "value": {
            "type": "String",
            "value": "evdo_0"
          },
          "brief": "EVDO Rel. 0"
        },
        {
          "id": "evdo_a",
          "value": {
            "type": "String",
            "value": "evdo_a"
          },
          "brief": "EVDO Rev. A"
        },
        {
          "id": "cdma2000_1xrtt",
          "value": {
            "type": "String",
            "value": "cdma2000_1xrtt"
          },
          "brief": "CDMA2000 1XRTT"
        },
        {
          "id": "hsdpa",
          "value": {
            "type": "String",
            "value": "hsdpa"
          },
          "brief": "HSDPA"
        },
        {
          "id": "hsupa",
          "value": {
            "type": "String",
            "value": "hsupa"
          },
          "brief": "HSUPA"
        },
        {
          "id": "hspa",
          "value": {
            "type": "String",
            "value": "hspa"
          },
          "brief": "HSPA"
        },
        {
          "id": "iden",
          "value": {
            "type": "String",
            "value": "iden"
          },
          "brief": "IDEN"
        },
        {
          "id": "evdo_b",
          "value": {
            "type": "String",
            "value": "evdo_b"
          },
          "brief": "EVDO Rev. B"
        },
        {
          "id": "lte",
          "value": {
            "type": "String",
            "value": "lte"
          },
          "brief": "LTE"
        },
        {
          "id": "ehrpd",
          "value": {
            "type": "String",
            "value": "ehrpd"
          },
          "brief": "EHRPD"
        },
        {
          "id": "hspap",
          "value": {
            "type": "String",
            "value": "hspap"
          },
          "brief": "HSPAP"
        },
        {
          "id": "gsm",
          "value": {
            "type": "String",
            "value": "gsm"
          },
          "brief": "GSM"
        },
        {
          "id": "td_scdma",
          "value": {
            "type": "String",
            "value": "td_scdma"
          },
          "brief": "TD-SCDMA"
        },
        {
          "id": "iwlan",
          "value": {
            "type": "String",
            "value": "iwlan"
          },
          "brief": "IWLAN"
        },
        {
          "id": "nr",
          "value": {
            "type": "String",
            "value": "nr"
          },
          "brief": "5G NR (New Radio)"
        },
        {
          "id": "nrnsa",
          "value": {
            "type": "String",
            "value": "nrnsa"
          },
          "brief": "5G NRNSA (New Radio Non-Standalone)"
        },
        {
          "id": "lte_ca",
          "value": {
            "type": "String",
            "value": "lte_ca"
          },
          "brief": "LTE CA"
        }
      ]
    },
    "brief": "This describes more details regarding the connection.type. It may be the type of cell technology connection, but it could be used for describing details about a wifi connection.",
    "examples": {
      "type": "String",
      "value": "LTE"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.connection.type",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "wifi",
          "value": {
            "type": "String",
            "value": "wifi"
          }
        },
        {
          "id": "wired",
          "value": {
            "type": "String",
            "value": "wired"
          }
        },
        {
          "id": "cell",
          "value": {
            "type": "String",
            "value": "cell"
          }
        },
        {
          "id": "unavailable",
          "value": {
            "type": "String",
            "value": "unavailable"
          }
        },
        {
          "id": "unknown",
          "value": {
            "type": "String",
            "value": "unknown"
          }
        }
      ]
    },
    "brief": "The internet connection type.",
    "examples": {
      "type": "String",
      "value": "wifi"
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "network.local.address",
    "type": {
      "type": "String"
    },
    "brief": "Local address of the network connection - IP address or Unix domain socket name.",
    "examples": {
      "type": "Strings",
      "values": [
        "10.1.2.80",
        "/tmp/my.sock"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "stability": "Stable"
  },
  {
    "name": "network.local.port",
    "type": {
      "type": "Int"
    },
    "brief": "Local port number of the network connection.",
    "examples": {
      "type": "Ints",
      "values": [
        65123
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "stability": "Stable"
  },
  {
    "name": "network.peer.address",
    "type": {
      "type": "String"
    },
    "brief": "Peer address of the network connection - IP address or Unix domain socket name.",
    "examples": {
      "type": "Strings",
      "values": [
        "10.1.2.80",
        "/tmp/my.sock"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "stability": "Stable"
  },
  {
    "name": "network.peer.port",
    "type": {
      "type": "Int"
    },
    "brief": "Peer port number of the network connection.",
    "examples": {
      "type": "Ints",
      "values": [
        65123
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "stability": "Stable"
  },
  {
    "name": "network.protocol.name",
    "type": {
      "type": "String"
    },
    "brief": "[OSI application layer](https://osi-model.com/application-layer/) or non-OSI equivalent.",
    "examples": {
      "type": "Strings",
      "values": [
        "amqp",
        "http",
        "mqtt"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "The value SHOULD be normalized to lowercase.",
    "stability": "Stable"
  },
  {
    "name": "network.protocol.version",
    "type": {
      "type": "String"
    },
    "brief": "Version of the protocol specified in `network.protocol.name`.",
    "examples": {
      "type": "String",
      "value": "3.1.1"
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "`network.protocol.version` refers to the version of the protocol used and might be different from the protocol client's version. If the HTTP client has a version of `0.27.2`, but sends HTTP version `1.1`, this attribute should be set to `1.1`.\n",
    "stability": "Stable"
  },
  {
    "name": "network.transport",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "tcp",
          "value": {
            "type": "String",
            "value": "tcp"
          },
          "brief": "TCP"
        },
        {
          "id": "udp",
          "value": {
            "type": "String",
            "value": "udp"
          },
          "brief": "UDP"
        },
        {
          "id": "pipe",
          "value": {
            "type": "String",
            "value": "pipe"
          },
          "brief": "Named or anonymous pipe."
        },
        {
          "id": "unix",
          "value": {
            "type": "String",
            "value": "unix"
          },
          "brief": "Unix domain socket"
        }
      ]
    },
    "brief": "[OSI transport layer](https://osi-model.com/transport-layer/) or [inter-process communication method](https://wikipedia.org/wiki/Inter-process_communication).\n",
    "examples": {
      "type": "Strings",
      "values": [
        "tcp",
        "udp"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "The value SHOULD be normalized to lowercase.\n\nConsider always setting the transport when setting a port number, since\na port number is ambiguous without knowing the transport. For example\ndifferent processes could be listening on TCP port 12345 and UDP port 12345.\n",
    "stability": "Stable"
  },
  {
    "name": "network.type",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "ipv4",
          "value": {
            "type": "String",
            "value": "ipv4"
          },
          "brief": "IPv4"
        },
        {
          "id": "ipv6",
          "value": {
            "type": "String",
            "value": "ipv6"
          },
          "brief": "IPv6"
        }
      ]
    },
    "brief": "[OSI network layer](https://osi-model.com/network-layer/) or non-OSI equivalent.",
    "examples": {
      "type": "Strings",
      "values": [
        "ipv4",
        "ipv6"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "The value SHOULD be normalized to lowercase.",
    "stability": "Stable"
  },
  {
    "name": "network.io.direction",
    "type": {
      "type": "Enum",
      "allow_custom_values": false,
      "members": [
        {
          "id": "transmit",
          "value": {
            "type": "String",
            "value": "transmit"
          }
        },
        {
          "id": "receive",
          "value": {
            "type": "String",
            "value": "receive"
          }
        }
      ]
    },
    "brief": "The network IO operation direction.",
    "examples": {
      "type": "Strings",
      "values": [
        "transmit"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    }
  },
  {
    "name": "server.address",
    "type": {
      "type": "String"
    },
    "brief": "Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.",
    "examples": {
      "type": "Strings",
      "values": [
        "example.com",
        "10.1.2.80",
        "/tmp/my.sock"
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "When observed from the client side, and when communicating through an intermediary, `server.address` SHOULD represent the server address behind any intermediaries, for example proxies, if it's available.\n",
    "stability": "Stable"
  },
  {
    "name": "server.port",
    "type": {
      "type": "Int"
    },
    "brief": "Server port number.",
    "examples": {
      "type": "Ints",
      "values": [
        80,
        8080,
        443
      ]
    },
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "When observed from the client side, and when communicating through an intermediary, `server.port` SHOULD represent the server port behind any intermediaries, for example proxies, if it's available.\n",
    "stability": "Stable"
  },
  {
    "name": "messaging.system",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "activemq",
          "value": {
            "type": "String",
            "value": "activemq"
          },
          "brief": "Apache ActiveMQ"
        },
        {
          "id": "aws_sqs",
          "value": {
            "type": "String",
            "value": "aws_sqs"
          },
          "brief": "Amazon Simple Queue Service (SQS)"
        },
        {
          "id": "azure_eventgrid",
          "value": {
            "type": "String",
            "value": "azure_eventgrid"
          },
          "brief": "Azure Event Grid"
        },
        {
          "id": "azure_eventhubs",
          "value": {
            "type": "String",
            "value": "azure_eventhubs"
          },
          "brief": "Azure Event Hubs"
        },
        {
          "id": "azure_servicebus",
          "value": {
            "type": "String",
            "value": "azure_servicebus"
          },
          "brief": "Azure Service Bus"
        },
        {
          "id": "gcp_pubsub",
          "value": {
            "type": "String",
            "value": "gcp_pubsub"
          },
          "brief": "Google Cloud Pub/Sub"
        },
        {
          "id": "jms",
          "value": {
            "type": "String",
            "value": "jms"
          },
          "brief": "Java Message Service"
        },
        {
          "id": "kafka",
          "value": {
            "type": "String",
            "value": "kafka"
          },
          "brief": "Apache Kafka"
        },
        {
          "id": "rabbitmq",
          "value": {
            "type": "String",
            "value": "rabbitmq"
          },
          "brief": "RabbitMQ"
        },
        {
          "id": "rocketmq",
          "value": {
            "type": "String",
            "value": "rocketmq"
          },
          "brief": "Apache RocketMQ"
        }
      ]
    },
    "brief": "An identifier for the messaging system being used. See below for a list of well-known identifiers.\n",
    "requirement_level": {
      "type": "Required"
    }
  },
  {
    "name": "error.type",
    "type": {
      "type": "Enum",
      "allow_custom_values": true,
      "members": [
        {
          "id": "other",
          "value": {
            "type": "String",
            "value": "_OTHER"
          },
          "brief": "A fallback error value to be used when the instrumentation doesn't define a custom value.\n"
        }
      ]
    },
    "brief": "Describes a class of error the operation ended with.\n",
    "examples": {
      "type": "Strings",
      "values": [
        "amqp:decode-error",
        "KAFKA_STORAGE_ERROR",
        "channel-error"
      ]
    },
    "requirement_level": {
      "type": "ConditionallyRequired",
      "text": "If and only if the messaging operation has failed."
    },
    "note": "The `error.type` SHOULD be predictable and SHOULD have low cardinality.\nInstrumentations SHOULD document the list of errors they report.\n\nThe cardinality of `error.type` within one instrumentation library SHOULD be low.\nTelemetry consumers that aggregate data from multiple instrumentation libraries and applications\nshould be prepared for `error.type` to have high cardinality at query time when no\nadditional filters are applied.\n\nIf the operation has completed successfully, instrumentations SHOULD NOT set `error.type`.\n\nIf a specific domain defines its own set of error identifiers (such as HTTP or gRPC status codes),\nit's RECOMMENDED to:\n\n* Use a domain-specific attribute\n* Set `error.type` to capture all errors, regardless of whether they are defined within the domain-specific set or not.",
    "stability": "Stable"
  },
  {
    "name": "server.address",
    "type": {
      "type": "String"
    },
    "brief": "Server domain name if available without reverse DNS lookup; otherwise, IP address or Unix domain socket name.",
    "examples": {
      "type": "Strings",
      "values": [
        "example.com",
        "10.1.2.80",
        "/tmp/my.sock"
      ]
    },
    "requirement_level": {
      "type": "ConditionallyRequired",
      "text": "If available."
    },
    "note": "This should be the IP/hostname of the broker (or other network-level peer) this specific message is sent to/received from.\n",
    "stability": "Stable"
  },
  {
    "name": "network.protocol.name",
    "type": {
      "type": "String"
    },
    "brief": "[OSI application layer](https://osi-model.com/application-layer/) or non-OSI equivalent.",
    "examples": {
      "type": "Strings",
      "values": [
        "amqp",
        "mqtt"
      ]
    },
    "tag": "connection-level",
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "The value SHOULD be normalized to lowercase.",
    "stability": "Stable"
  },
  {
    "name": "network.protocol.version",
    "type": {
      "type": "String"
    },
    "brief": "Version of the protocol specified in `network.protocol.name`.",
    "examples": {
      "type": "String",
      "value": "3.1.1"
    },
    "tag": "connection-level",
    "requirement_level": {
      "type": "Recommended"
    },
    "note": "`network.protocol.version` refers to the version of the protocol used and might be different from the protocol client's version. If the HTTP client has a version of `0.27.2`, but sends HTTP version `1.1`, this attribute should be set to `1.1`.\n",
    "stability": "Stable"
  },
  {
    "name": "messaging.destination.name",
    "type": {
      "type": "String"
    },
    "brief": "The message destination name",
    "examples": {
      "type": "Strings",
      "values": [
        "MyQueue",
        "MyTopic"
      ]
    },
    "requirement_level": {
      "type": "ConditionallyRequired",
      "text": "if and only if `messaging.destination.name` is known to have low cardinality. Otherwise, `messaging.destination.template` MAY be populated."
    },
    "note": "Destination name SHOULD uniquely identify a specific queue, topic or other entity within the broker. If\nthe broker doesn't have such notion, the destination name SHOULD uniquely identify the broker.\n"
  },
  {
    "name": "messaging.destination.template",
    "type": {
      "type": "String"
    },
    "brief": "Low cardinality representation of the messaging destination name",
    "examples": {
      "type": "Strings",
      "values": [
        "/customers/{customerId}"
      ]
    },
    "requirement_level": {
      "type": "ConditionallyRequired",
      "text": "if available."
    },
    "note": "Destination names could be constructed from templates. An example would be a destination name involving a user name or product id. Although the destination name in this case is of high cardinality, the underlying template is of low cardinality and can be effectively used for grouping and aggregation.\n"
  }
]